name: CI

on:
    pull_request:
    push:
        branches:
            - master
            - staging
            - "dev/*"
            - "fix/*"
        paths-ignore:
            - "**.md"
            - "**.txt"
            - "LICENSE"

env:
    CI: true
    TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    TURBO_TEAM: ${{ vars.TURBO_TEAM }}

permissions:
    contents: read

jobs:
    lint:
        name: 📋 Lint
        timeout-minutes: 15
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v4

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 📋 Lint
              run: pnpm run lint

    typecheck:
        name: ✅ Typecheck
        timeout-minutes: 15
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v4

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: ✅ Typecheck
              run: pnpm run typecheck

    build:
        name: 🔨 Build
        needs: [lint, typecheck]
        timeout-minutes: 25
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v4

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 🔨 Build All
              run: pnpm run build

            - name: 📦 Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                  retention-days: 1
                  include-hidden-files: true
                  overwrite: true
                  compression-level: 0
                  if-no-files-found: error
                  name: build-artifact
                  path: build/

    test:
        name: 🧪 Test
        needs: [build]
        timeout-minutes: 25
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v4

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 📥 Download build artifact
              uses: actions/download-artifact@v4
              with:
                  name: build-artifact
                  path: build/

            - name: 🧪 Test
              run: pnpm run lint

            - name: 🦺 Report Coverage to GitHub
              if: ${{ !cancelled() }}
              uses: davelosert/vitest-coverage-report-action@v2.8.3

    release:
        name: 🚢 Release
        needs: [build, test]
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        permissions:
            contents: write
            issues: write
            pull-requests: write
            id-token: write
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v4

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 📥 Download build artifact
              uses: actions/download-artifact@v4
              with:
                  name: build-artifact
                  path: build/

            - name: 🔬 Verify integrity
              run: npm audit signatures

            - name: 📦 Semantic Release
              run: pnpx semantic-release
