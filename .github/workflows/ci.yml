name: CI

on:
    pull_request:
    push:
        branches:
            - master
            - staging
            - 'dev/*'
            - 'fix/*'
        paths-ignore:
            - '**.md'
            - '**.txt'
            - 'LICENSE'

env:
    CI: true

permissions:
    contents: read
    checks: write

jobs:
    lint:
        name: 📋 Lint
        timeout-minutes: 15
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v5

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 📋 Lint
              run: pnpm run lint

    typecheck:
        name: ✅ Typecheck
        timeout-minutes: 15
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v5

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: ✅ Typecheck
              run: pnpm run typecheck

    test:
        name: 🧪 Test
        needs: [typecheck]
        timeout-minutes: 25
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v5

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 🧪 Test
              run: pnpm run test --coverage

            - name: 🦺 Codecov Coverage Reports
              if: ${{ !cancelled() }}
              uses: codecov/codecov-action@v5.5.0
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: filiphsps/react-native-scroll-to-child

            - name: 🦺 Upload test results to Codecov
              if: ${{ !cancelled() }}
              uses: codecov/test-results-action@v1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: filiphsps/react-native-scroll-to-child

    build:
        name: 🔨 Build
        needs: [lint, typecheck]
        timeout-minutes: 25
        runs-on: ubuntu-latest
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v5

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 🔨 Build All
              run: pnpm run build

            - name: 📦 Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                  retention-days: 1
                  include-hidden-files: true
                  overwrite: true
                  compression-level: 0
                  if-no-files-found: error
                  name: build-artifact
                  path: dist/

    release:
        name: 🚢 Release
        needs: [build, test]
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        permissions:
            contents: write
            issues: write
            pull-requests: write
            id-token: write
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:
            - name: 🕶️ Checkout repository
              uses: actions/checkout@v5

            - name: 🚀 Bootstrap
              uses: ./.github/common/bootstrap

            - name: 📥 Download build artifact
              uses: actions/download-artifact@v5
              with:
                  name: build-artifact
                  path: dist/

            - name: 🔬 Verify integrity
              run: npm audit signatures

            - name: 📦 Semantic Release
              if: ${{ !cancelled() }}
              run: pnpx semantic-release
